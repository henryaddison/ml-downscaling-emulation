#!/usr/bin/env python
# setup jobs for training and then sampling from a model

import os
import subprocess
import sys

import typer

app = typer.Typer()


@app.command(
    context_settings={
        "allow_extra_args": True,
        "ignore_unknown_options": True,
    }
)
def main(
    ctx: typer.Context,
    run_id: str = typer.Option(...),
    cpm_dataset: str = typer.Option(...),
    gcm_dataset: str = typer.Option(...),
    epochs: int = typer.Option(...),
):
    # Add any other config on the commandline for training
    # --config.data.input_transform_key=spatial

    # train
    train_cmd = (
        [f"{os.path.dirname(__file__)}/queue-training"]
        + [run_id, cpm_dataset, "--epochs", epochs]
        + ctx.args
    )
    print(" ".join(train_cmd).strip(), file=sys.stderr)
    output = subprocess.run(train_cmd, capture_output=True)
    print(output.stderr.decode("utf8").strip(), file=sys.stderr)
    training_job_id = output.stdout.decode("utf8").strip()
    print(training_job_id)

    # sample
    sample_cmd = [f"{os.path.dirname(__file__)}/queue-sampling"] + [
        run_id,
        cpm_dataset,
        gcm_dataset,
        epochs,
        "--depends-on",
        training_job_id,
    ]
    print(" ".join(sample_cmd).strip(), file=sys.stderr)
    output = subprocess.run(sample_cmd, capture_output=True)
    print(output.stderr.decode("utf8").strip(), file=sys.stderr)
    print(output.stdout.decode("utf8").strip())


if __name__ == "__main__":
    app()
