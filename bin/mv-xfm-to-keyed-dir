#!/usr/bin/env python
# move cached input transforms and samples to folder that includes the transform key

import glob
import os
from ml_collections import config_dict
import shutil
import yaml


def main():
    model_run_wildcard_path = os.path.join(
        os.getenv("DERIVED_DATA"), "workdirs", "u-net", "*"
    )
    print(model_run_wildcard_path)
    model_run_glob = glob.glob(model_run_wildcard_path)
    for model_run_path in model_run_glob:
        # skip the archive directory
        if model_run_path.endswith("archive"):
            continue
        print(f"Working on {model_run_path}", flush=True)
        # extract input transform key from config
        model_run_config_path = os.path.join(model_run_path, "config.yml")
        with open(model_run_config_path) as f:
            config = config_dict.ConfigDict(yaml.unsafe_load(f))
        try:
            input_xfm_key = config["input_transform_key"]
        except AttributeError:
            input_xfm_key = "v1"

        # move the transform
        input_xfm_glob = glob.glob(
            os.path.join(model_run_path, "transforms", "*", "input.pickle")
        )
        for input_xfm_path in input_xfm_glob:
            new_xfm_path = input_xfm_path.replace(
                "input.pickle", f"{input_xfm_key}/input.pickle"
            )
            os.makedirs(os.path.dirname(new_xfm_path), exist_ok=True)
            print(f"Moving {input_xfm_path} to {new_xfm_path}")
            shutil.move(input_xfm_path, new_xfm_path)

        # move the samples
        samples_glob = glob.glob(os.path.join(model_run_path, "samples", "*", "*"))
        for sample_set_path in samples_glob:
            new_sample_path = os.path.join(sample_set_path, input_xfm_key)
            existing_sample_splits_glob = glob.glob(os.path.join(sample_set_path, "*"))
            os.makedirs(new_sample_path, exist_ok=True)
            for sample_split_path in existing_sample_splits_glob:
                print(f"Moving {sample_split_path} to {new_sample_path}")
                shutil.move(sample_split_path, new_sample_path)


if __name__ == "__main__":
    main()
